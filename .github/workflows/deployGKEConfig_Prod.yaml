name: Edit Config and Deploy to GKE - Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release. Eg: 0.31.0_1735000'
        required: true
      gamemodetype:
        description: 'Game Mode to Deploy'
        required: true
        type: choice
        options:
          - br
          - minibr
          - tutorial
          - tdm
          - minitdm
      gamemodemap:
        description: 'Game Mode - Map to Deploy'
        required: true
        type: choice
        options:
          - br - virlok
          - minibr - foundry
          - minibr - lok terminal
          - tdm - saaplok
          - minitdm - cache
      teamSize:
        description: 'Max Team Size'
        required: true
        type: choice
        options:
          - quad
          - duo
          - solo
      enableBots:
        description: 'Enable Bots Backfill'
        required: false
        type: boolean
        default: false
      botsBackfillLimit:
        description: 'Add Bots Backfill Limit'
        required: true
        default: '60'
      mm_mode:
        description: 'Enable Backend MM'
        required: true
        type: boolean
        default: true
      roomname:
        description: 'Room Name(s), comma-separated'
        required: true
        default: 'empty'
      code_type:
        description: 'Is tournament room'
        required: false
        type: boolean
        default: false

run-name: Edit Config and Deploy to GKE - Prod - ${{ github.event.inputs.gamemodetype }} - ${{ github.event.inputs.version }}
jobs:
  update_yaml:
    permissions:
      contents: 'write'
      id-token: 'write'
    name: Yaml Updater
    runs-on: ubuntu-latest
    steps:
    - name: Validate Version Format
      run: |
        VERSION_INPUT="${{ github.event.inputs.version }}"
        VERSION_REGEX="^[0-9]+\.[0-9]+\.[0-9]+_[0-9]+$"
        if [[ ! $VERSION_INPUT =~ $VERSION_REGEX ]]; then
          echo "Version format is invalid. Expected format: [number].[number].[number]_[number] (e.g., 0.31.0_1735)."
          exit 1
        fi
      shell: bash

    - name: Validate Room Names
      run: |
        ROOMNAMES="${{ github.event.inputs.roomname }}"
        if [[ "$ROOMNAMES" == "empty" ]]; then
          echo "No room names provided. Exiting."
          exit 1
        fi

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Process Multiple Room Names
      run: |
        ROOMNAMES="AAAAA, BBBBB, CCCCC,DDDD"
        IFS=',' read -r -a ROOMNAME_ARRAY <<< "$ROOMNAMES"
        
        for ROOM in "${ROOMNAME_ARRAY[@]}"; do
          ROOM=$(echo "$ROOM" | xargs) # Trim leading and trailing spaces
          LOWERCASE_ROOM=$(echo "$ROOM" | tr '[:upper:]' '[:lower:]')
          
          # Create a copy of the template for each room
          cp Production/Agones/actionRunnerConfigTemplate.yaml "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          
          # Perform replacements for this room
          sed -i "s/_ROOMTYPE_/custom-dev-${LOWERCASE_ROOM}/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_ROOMNAME_/${LOWERCASE_ROOM}/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_VERSION_/1.2.0_5250000/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_GAMEMODENAME_/br/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_GAMEMODEMAP_/br - virlok/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_TEAMSIZENAME_/quad/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_BOTS_BACKFILL_ENABLE_/$( [ "false" == 'true' ] && echo 1 || echo 0 )/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_MM_MODE_/$( [ "true" == 'true' ] && echo 1 || echo 0 )/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          sed -i "s/_BACKFILL_SIZE_/60/g" "Production/Agones/actionRunnerConfig_${LOWERCASE_ROOM}.yaml"
          
          echo "Processed room: $ROOM"
        done

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Production/Agones/actionRunnerConfig_*.yaml
        git commit -m "Update Production configs for multiple rooms"
        git push

    - name: GCP Cloud Auth
      id: 'gcp-cloud-auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY_PROD }}'

    - name: Apply Configurations
      run: |
        ROOMNAMES="${{ github.event.inputs.roomname }}"
        IFS=',' read -r -a ROOMNAME_ARRAY <<< "$ROOMNAMES"
        for ROOM in "${ROOMNAME_ARRAY[@]}"; do
          LOWERCASE_ROOM=$(echo "$ROOM" | tr '[:upper:]' '[:lower:]')
          kubectl create -f Production/Agones/actionRunnerConfig_$LOWERCASE_ROOM.yaml
        done
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
